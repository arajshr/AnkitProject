<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="16858" started-at="2019-01-30T05:34:26Z" finished-at="2019-01-30T05:34:43Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="16858" started-at="2019-01-30T05:34:26Z" finished-at="2019-01-30T05:34:43Z">
      <class name="inbox.Sample">
        <test-method status="PASS" signature="startRepot()[pri:0, instance:inbox.Sample@62ee68d8]" name="startRepot" is-config="true" duration-ms="245" started-at="2019-01-30T11:04:26Z" finished-at="2019-01-30T11:04:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepot -->
        <test-method status="PASS" signature="launchBrowser()[pri:0, instance:inbox.Sample@62ee68d8]" name="launchBrowser" is-config="true" duration-ms="5237" started-at="2019-01-30T11:04:26Z" finished-at="2019-01-30T11:04:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="PASS" signature="login(java.lang.reflect.Method)[pri:0, instance:inbox.Sample@62ee68d8]" name="login" is-config="true" duration-ms="13" started-at="2019-01-30T11:04:32Z" finished-at="2019-01-30T11:04:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void inbox.Sample.verify_Denail_DOS()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="FAIL" signature="verify_Denail_DOS()[pri:0, instance:inbox.Sample@62ee68d8]" name="verify_Denail_DOS" duration-ms="2971" started-at="2019-01-30T11:04:32Z" finished-at="2019-01-30T11:04:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at inbox.Sample.verify_Denail_DOS(Sample.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_Denail_DOS -->
        <test-method status="PASS" signature="endLogger(org.testng.ITestResult)[pri:0, instance:inbox.Sample@62ee68d8]" name="endLogger" is-config="true" duration-ms="1460" started-at="2019-01-30T11:04:35Z" finished-at="2019-01-30T11:04:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_Denail_DOS status=FAILURE method=Sample.verify_Denail_DOS()[pri:0, instance:inbox.Sample@62ee68d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLogger -->
        <test-method status="PASS" signature="login(java.lang.reflect.Method)[pri:0, instance:inbox.Sample@62ee68d8]" name="login" is-config="true" duration-ms="2" started-at="2019-01-30T11:04:36Z" finished-at="2019-01-30T11:04:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void inbox.Sample.verify_KickOut_DOS()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="verify_KickOut_DOS()[pri:0, instance:inbox.Sample@62ee68d8]" name="verify_KickOut_DOS" duration-ms="1590" started-at="2019-01-30T11:04:36Z" finished-at="2019-01-30T11:04:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_KickOut_DOS -->
        <test-method status="PASS" signature="endLogger(org.testng.ITestResult)[pri:0, instance:inbox.Sample@62ee68d8]" name="endLogger" is-config="true" duration-ms="1305" started-at="2019-01-30T11:04:38Z" finished-at="2019-01-30T11:04:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_KickOut_DOS status=SUCCESS method=Sample.verify_KickOut_DOS()[pri:0, instance:inbox.Sample@62ee68d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLogger -->
        <test-method status="PASS" signature="login(java.lang.reflect.Method)[pri:0, instance:inbox.Sample@62ee68d8]" name="login" is-config="true" duration-ms="2" started-at="2019-01-30T11:04:39Z" finished-at="2019-01-30T11:04:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void inbox.Sample.verify_Regular_DOS()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="verify_Regular_DOS()[pri:0, instance:inbox.Sample@62ee68d8]" name="verify_Regular_DOS" duration-ms="1683" started-at="2019-01-30T11:04:39Z" finished-at="2019-01-30T11:04:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_Regular_DOS -->
        <test-method status="PASS" signature="endLogger(org.testng.ITestResult)[pri:0, instance:inbox.Sample@62ee68d8]" name="endLogger" is-config="true" duration-ms="1293" started-at="2019-01-30T11:04:41Z" finished-at="2019-01-30T11:04:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_Regular_DOS status=SUCCESS method=Sample.verify_Regular_DOS()[pri:0, instance:inbox.Sample@62ee68d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLogger -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:inbox.Sample@62ee68d8]" name="closeBrowser" is-config="true" duration-ms="1285" started-at="2019-01-30T11:04:42Z" finished-at="2019-01-30T11:04:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:inbox.Sample@62ee68d8]" name="endReport" is-config="true" duration-ms="19" started-at="2019-01-30T11:04:43Z" finished-at="2019-01-30T11:04:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- inbox.Sample -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
